Difference between String and StringBuffer
===========================================
String :
1) String are immutable
ex.,         s.concat(" Kolagir");
             System.out.println(s);  //Kajol
             //if u want to do changes then store the result in another object
             String res = s.concat(" Kolagir");
             System.out.println(res);    //Kajol Kolagir
2) In string equals() method is used for content comparison and == operator for reference comparison.
ex.,
        String s1 = new String("Kaju");
        String s2 = new String("Kaju");
        System.out.println(s1==s2); //false
        System.out.println(s1.equals(s2));  //true


StringBuffer :
1) StringBuffer are mutable.
        StringBuffer str = new StringBuffer("Kajol");
        str.append(" Kolagir");
        System.out.println(str);    //Kajol Kolagir
2) In string equals() method is used for content comparison and == operator for reference comparison.
ex.,
        StringBuffer sb1 = new StringBuffer("Kaju");
        StringBuffer sb2 = new StringBuffer("Kaju");
        System.out.println(sb1==sb2);   //false
        System.out.println(sb1.equals(sb2));    //false

Note :
Whenever we going to create object using new keyword in String the object will created in heap
area and also the content will store in SCP area.
for ex., we hava
String s1 = new String("Kaju");
String s2 = new String("Kaju");
String s3 = "Kaju";
String s4 = "Kaju";
in this example two object will create in heap area for s1 and s2 and 1 content will store in SCP because
content is same of all 4 variables.

Example for String constant Pool(SCP) and heap memory :
=======================================================

        String s1 = new String("You cannot change me");
        String s2 = new String("You cannot change me");
        System.out.println(s1==s2); //false

        String s3 = "You cannot change me";
        System.out.println(s1==s3); //false

        String s4 = "You cannot change me";
        System.out.println(s3==s4); //true

        String s5 = "You cannot " +  "change me";
        System.out.println(s4==s5);     //true

        String s6 = "You cannot ";
        String s7 = s6 + "change me";
        System.out.println(s4==s7); //false

        final String s8 = "You cannot ";
        String s9 = s8 + "change me";
        System.out.println(s4==s9);     //true

        Heap                SCP
        s1                  ("You cannot change me") s3, s4, s5(there is constant value that's why), s9(s8 is constant we used there final keyword that's why content will assign)
        s2                  ("You cannot ") s6
        s7(there is variable and constant value that's why new object will create in heap area)


